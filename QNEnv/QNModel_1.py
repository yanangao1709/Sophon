# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#     Author: Yanan Gao                                       #
#       Date: 13-06-2023                                      #
#      Goals: topology data for TOQN                          #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# 量子网络模型1
from Config import QNConfig

# request pool
# Attention!! Networkx表示的拓扑里，节点ID没有0点
REQUESTSET = [[1,11], [2,13], [3,14], [2,9], [7,18]]
# the volumn of each request
D_VOLUMN = [15, 15, 15, 15, 15]
# candidate_route_num routes of each request
ROUTES = [
    [[1, 2, 6, 7, 11], [1, 3, 5, 11], [1, 3, 5, 7, 11]],
    [[2, 6, 14, 13], [2, 6, 7, 11, 13], [2, 15, 14, 13]],
    [[3, 6, 14], [3, 1, 2, 6, 14], [3, 5, 7, 14]],
    [[2, 5, 8, 9], [2, 6, 7, 5, 8, 9], [2, 5, 4, 9]],
    [[7, 11, 12, 18], [7, 5, 8, 18], [7, 11, 10, 12, 18]]
]

ROUTES_LEN = [
    [14, 15, 16],
    [10, 13, 15],
    [9, 11, 12],
    [12, 15, 15],
    [14, 19, 21]
]

# 每个链接的物理长度
LINK_LENS = [
    [0, 4, 3, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [4, 0, 0, 0, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0],
    [3, 0, 0, 0, 4, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [8, 0, 0, 0, 5, 0, 0, 6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 6, 4, 5, 0, 0, 4, 4, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0],
    [0, 2, 7, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0],
    [0, 0, 0, 0, 4, 3, 0, 0, 0, 0, 5, 0, 0, 4, 0, 0, 0, 0],
    [0, 0, 0, 6, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 11],
    [0, 0, 0, 4, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 5, 6, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 8, 0, 5, 0, 0, 5, 0, 4, 3, 0, 0, 5, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 4, 0, 0, 0, 0, 7, 0, 5],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 6, 0, 4, 0, 0],
    [0, 0, 0, 0, 0, 2, 4, 0, 0, 0, 0, 0, 6, 0, 4, 0, 0, 0],
    [0, 5, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 7, 4, 0, 0, 0, 8, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 9],
    [0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 5, 0, 0, 0, 0, 9, 0]
]

# r 请求的 k路径 有没有经过这个点
# 生成
# H_RKN = [[[0] * QNConfig.node_num for i in range(QNConfig.candidate_route_num)] for j in range(QNConfig.request_pool_len)]
# for r in range(len(REQUESTSET)):
#     for k,p in enumerate(ROUTES[r]):
#         for n in range(len(p)):
#             H_RKN[r][k][p[n]-1] = 1
# print(H_RKN)

H_RKN = [
    [[1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
     [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
     [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]],
    [[0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
     [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0],
     [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]],
    [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
     [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
     [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]],
    [[0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    [[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1],
     [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
     [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1]]
]

# r的k候选路径的跳数
ROUTES_HOPS = [
    [5, 4, 5],
    [4, 5, 4],
    [3, 5, 4],
    [4, 6, 4],
    [4, 4, 5]
]

# node capacity
# NODE_CPA = [20,30,30,40,60,40,20,50,10,30,70,30,20,40,20,40,10,20]
# NODE_CPA = [8,20,16,18,6,5,20,15,10,12,8,10,6,22,14,9,12,16]
# NODE_CPA = [10,22,18,20,8,7,22,17,12,14,10,12,8,24,16,11,14,18]
NODE_CPA = [12, 24, 20, 22, 10, 9, 24, 19, 14, 16, 12, 14, 10, 26, 18, 13, 16, 20]
# NODE_CPA = random.randint(30,50)
# mean = sum(NODE_CPA)/len(NODE_CPA)
# print(mean)
